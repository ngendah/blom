add_subdirectory(decision_tree)
add_subdirectory(random_forest)

add_library(
  fast_engine_factory
  STATIC
  fast_engine_factory.cc
)
target_include_directories(
  fast_engine_factory
  PRIVATE
  ${absl_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)
target_link_libraries(
  fast_engine_factory
  PRIVATE
  dataset_proto
  utils_registration
  absl::strings
  absl::status
  absl::statusor
  protobuf::libprotoc
  farmhash::farmhash
)
add_library(model_fast_engine_factory ALIAS fast_engine_factory)

add_library(
  abstract_model
  STATIC
  abstract_model.cc
)
target_include_directories(
  abstract_model
  PRIVATE
  ${absl_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)
target_link_libraries(
  abstract_model
  PRIVATE
  model_proto
  dataset_proto
  dataset_data_spec
  dataset_vertical_dataset
  dataset_weight
  metric_metric
  metric_uplift
  metric_ranking_utils
  model_fast_engine_factory
  serving_example_set
  utils_concurrency
  utils_logging
  utils_distribution
  utils_sharded_io
  utils_status_macros
  absl::status
  absl::statusor
  absl::strings
  protobuf::libprotoc
  farmhash::farmhash
)
add_library(model_abstract_model ALIAS abstract_model)

add_library(
  metadata
  STATIC
  metadata.cc
)
target_include_directories(
  metadata
  PRIVATE
  ${absl_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)
target_link_libraries(
  metadata
  PRIVATE
  model_proto
  absl::strings
)
add_library(model_metadata ALIAS metadata)

add_library(
  model_library
  STATIC
  model_library.cc
)
target_include_directories(
  model_library
  PRIVATE
  ${absl_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)
target_link_libraries(
  model_library
  PRIVATE
  model_proto
  model_abstract_model
  model_fast_engine_factory
  model_metadata
  utils_blob_sequence
  utils_bytestream
  utils_filesystem
  utils_logging
  utils_registration
  utils_status_macros
  absl::strings
)
add_library(model_model_library ALIAS model_library)

add_library(
  model_engine_wrapper
  STATIC
  model_engine_wrapper.cc
)
target_include_directories(
  model_engine_wrapper
  PRIVATE
  ${absl_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)
target_link_libraries(
  model_engine_wrapper
  PRIVATE
  dataset_proto
  model_proto
  dataset_vertical_dataset
  model_abstract_model
  serving_example_set
  utils_logging
  absl::strings
  absl::status
  absl::statusor
  protobuf::libprotoc
)

add_library(
  model_registration
  STATIC
  model_registration.cc
)
target_include_directories(
  model_registration
  PRIVATE
  ${absl_SOURCE_DIR}
  ${googletest_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)

target_link_libraries(
  model_registration
  PRIVATE
  model_random_forest
)


# Testing artifact

file(GLOB test_SRC_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *test.cc)
add_library(
  model_tests_obj
  OBJECT
  ${test_SRC_FILES}
)
target_include_directories(
  model_tests_obj
  PRIVATE
  ${absl_SOURCE_DIR}
  ${googletest_SOURCE_DIR}
  ${protobuf_SOURCE_DIR}/src
  ${farmhash_SOURCE_DIR}/src
  ${PROTOC_GENERATED_SOURCE_DIR}
)
target_link_libraries(
  model_tests_obj
  PRIVATE
  model_model_library
  model_registration
  utils_status_macros
  utils_testing_utils
  # third_party objects
  protobuf::libprotoc
  farmhash::farmhash
  GTest::gtest_main GTest::gmock_main
)

